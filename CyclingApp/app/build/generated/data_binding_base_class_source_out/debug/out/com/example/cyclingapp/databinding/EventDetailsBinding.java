// Generated by view binder compiler. Do not edit!
package com.example.cyclingapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.cyclingapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class EventDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button back;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView dateInfo;

  @NonNull
  public final TextView eventName;

  @NonNull
  public final FrameLayout fragmentContainerViewRoute;

  @NonNull
  public final Button joinEvent;

  @NonNull
  public final TextView locInfo;

  @NonNull
  public final TextView locationInfo;

  @NonNull
  public final TextView partInfo;

  @NonNull
  public final TextView participants;

  private EventDetailsBinding(@NonNull LinearLayout rootView, @NonNull Button back,
      @NonNull TextView date, @NonNull TextView dateInfo, @NonNull TextView eventName,
      @NonNull FrameLayout fragmentContainerViewRoute, @NonNull Button joinEvent,
      @NonNull TextView locInfo, @NonNull TextView locationInfo, @NonNull TextView partInfo,
      @NonNull TextView participants) {
    this.rootView = rootView;
    this.back = back;
    this.date = date;
    this.dateInfo = dateInfo;
    this.eventName = eventName;
    this.fragmentContainerViewRoute = fragmentContainerViewRoute;
    this.joinEvent = joinEvent;
    this.locInfo = locInfo;
    this.locationInfo = locationInfo;
    this.partInfo = partInfo;
    this.participants = participants;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static EventDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static EventDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.event_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static EventDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.back;
      Button back = ViewBindings.findChildViewById(rootView, id);
      if (back == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.dateInfo;
      TextView dateInfo = ViewBindings.findChildViewById(rootView, id);
      if (dateInfo == null) {
        break missingId;
      }

      id = R.id.eventName;
      TextView eventName = ViewBindings.findChildViewById(rootView, id);
      if (eventName == null) {
        break missingId;
      }

      id = R.id.fragment_container_view_route;
      FrameLayout fragmentContainerViewRoute = ViewBindings.findChildViewById(rootView, id);
      if (fragmentContainerViewRoute == null) {
        break missingId;
      }

      id = R.id.joinEvent;
      Button joinEvent = ViewBindings.findChildViewById(rootView, id);
      if (joinEvent == null) {
        break missingId;
      }

      id = R.id.locInfo;
      TextView locInfo = ViewBindings.findChildViewById(rootView, id);
      if (locInfo == null) {
        break missingId;
      }

      id = R.id.locationInfo;
      TextView locationInfo = ViewBindings.findChildViewById(rootView, id);
      if (locationInfo == null) {
        break missingId;
      }

      id = R.id.partInfo;
      TextView partInfo = ViewBindings.findChildViewById(rootView, id);
      if (partInfo == null) {
        break missingId;
      }

      id = R.id.participants;
      TextView participants = ViewBindings.findChildViewById(rootView, id);
      if (participants == null) {
        break missingId;
      }

      return new EventDetailsBinding((LinearLayout) rootView, back, date, dateInfo, eventName,
          fragmentContainerViewRoute, joinEvent, locInfo, locationInfo, partInfo, participants);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
